{"version":3,"sources":["App.js","index.js"],"names":["goodsWithId","map","name","index","id","App","state","selectedGood","setSelection","good","setState","resetSelection","className","this","type","onClick","ClassNames","hidden","key","disabled","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAiBMA,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGkCC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACxDD,OAAME,GAAID,EAAQ,MA4ELE,E,4MAxEbC,MAAQ,CACNC,aAAc,O,EAGhBC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,aAAcE,K,EAIlBE,eAAiB,WACf,EAAKD,SAAS,CACZH,aAAc,Q,4CAIlB,WAAU,IAAD,OACP,OACE,yBAAKK,UAAU,OACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,eACb,4BACGC,KAAKP,MAAMC,aACV,oCACE,0BAAMK,UAAU,YACbC,KAAKP,MAAMC,cAEb,IAJH,eAOE,oBAEN,4BACEO,KAAK,SACLC,QAASF,KAAKF,eACdC,UAAWI,IACT,+BACA,CAAEC,QAASJ,KAAKP,MAAMC,gBAGxB,uBAAGK,UAAU,iBAGhBZ,EAAYC,KAAI,SAAAQ,GAAI,OACnB,yBAAKS,IAAKT,EAAKL,GAAIQ,UAAU,QAC3B,yBAAKA,UAAU,yBACb,4BACEE,KAAK,SACLF,UAAWI,IACT,KACA,SACA,CAAEG,SAAUV,EAAKP,OAAS,EAAKI,MAAMC,eAEvCQ,QAAS,kBAAM,EAAKP,aAAaC,EAAKP,QAPxC,WAYF,yBAAKU,UAAWI,IAAW,CACzBI,SAAUX,EAAKP,OAAS,EAAKI,MAAMC,gBAGlCE,EAAKP,gB,GA/DJmB,IAAMC,WCjBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.21b6e8c0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport ClassNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithId = goodsFromServer.map((name, index) => ({\n  name, id: index + 1,\n}));\n\nclass App extends React.Component {\n  state = {\n    selectedGood: 'Jam',\n  }\n\n  setSelection = (good) => {\n    this.setState({\n      selectedGood: good,\n    });\n  }\n\n  resetSelection = () => {\n    this.setState({\n      selectedGood: null,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"ui middle aligned divided list\">\n          <div className=\"list-header\">\n            <h1>\n              {this.state.selectedGood ? (\n                <>\n                  <span className=\"selected\">\n                    {this.state.selectedGood}\n                  </span>\n                  {' '}\n                  is selected\n                </>\n              ) : 'Nothing selected'}\n            </h1>\n            <button\n              type=\"button\"\n              onClick={this.resetSelection}\n              className={ClassNames(\n                'ui icon button header-button',\n                { hidden: !this.state.selectedGood },\n              )}\n            >\n              <i className=\"close icon\" />\n            </button>\n          </div>\n          {goodsWithId.map(good => (\n            <div key={good.id} className=\"item\">\n              <div className=\"right floated content\">\n                <button\n                  type=\"button\"\n                  className={ClassNames(\n                    'ui',\n                    'button',\n                    { disabled: good.name === this.state.selectedGood },\n                  )}\n                  onClick={() => this.setSelection(good.name)}\n                >\n                  Select\n                </button>\n              </div>\n              <div className={ClassNames({\n                selected: good.name === this.state.selectedGood,\n              })}\n              >\n                {good.name}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}